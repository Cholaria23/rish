(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/app"],{

/***/ "./resources/js/air-datepicker.js":
/*!****************************************!*\
  !*** ./resources/js/air-datepicker.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var air_datepicker_dist_js_datepicker_min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! air-datepicker/dist/js/datepicker.min.js */ \"./node_modules/air-datepicker/dist/js/datepicker.min.js\");\n/* harmony import */ var air_datepicker_dist_js_datepicker_min_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(air_datepicker_dist_js_datepicker_min_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction initDatePicker() {\n  if ($('html').attr('lang') == 'en') {\n    $.fn.datepicker.language['en'] = {\n      days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      daysShort: ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'],\n      daysMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      monthsShort: ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May', 'Jun.', 'Jul.', 'Aug.', 'Sep.', 'Oct.', 'Nov.', 'Dec.'],\n      today: 'Today',\n      clear: 'Clear',\n      dateFormat: 'dd.mm.yyyy',\n      timeFormat: 'hh:ii',\n      firstDay: 7\n    };\n    $('.datepicker-before-js').datepicker({\n      language: 'en',\n      maxDate: new Date()\n    });\n    $('.datepicker-after-js').datepicker({\n      language: 'en',\n      minDate: new Date()\n    });\n  } else if ($('html').attr('lang') == 'uk') {\n    $.fn.datepicker.language['uk'] = {\n      days: ['Неділя', 'понеділок', 'вівторок', 'середа', 'четвер', 'п\\'ятницю', ' суботу '],\n      daysShort: ['Вос', 'Пон', 'Вів', 'Сре', 'Чет', 'П\\'ят', 'Суб'],\n      daysMin: ['Нд', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n      months: ['Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень'],\n      monthsShort: ['січень', 'лютий', 'березнь', 'квітень', 'травень', 'червень', 'липень', 'серпень', 'вересень', 'жовтень', 'листопад', 'грудень'],\n      today: 'Сегодня',\n      clear: 'Очистить',\n      dateFormat: 'dd.mm.yyyy',\n      timeFormat: 'hh:ii',\n      firstDay: 1\n    };\n    $('.datepicker-before-js').datepicker({\n      language: 'uk',\n      maxDate: new Date()\n    });\n    $('.datepicker-after-js').datepicker({\n      language: 'uk',\n      minDate: new Date()\n    });\n  } else {\n    $('.datepicker-before-js').datepicker({\n      maxDate: new Date()\n    });\n    $('.datepicker-after-js').datepicker({\n      minDate: new Date()\n    });\n  }\n}\n\n$(document).ready(function () {\n  if ($('.datepicker-before-js').length || $('.datepicker-after-js').length) {\n    initDatePicker();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYWlyLWRhdGVwaWNrZXIuanM/Y2MwMyJdLCJuYW1lcyI6WyJpbml0RGF0ZVBpY2tlciIsIiQiLCJhdHRyIiwiZm4iLCJkYXRlcGlja2VyIiwibGFuZ3VhZ2UiLCJkYXlzIiwiZGF5c1Nob3J0IiwiZGF5c01pbiIsIm1vbnRocyIsIm1vbnRoc1Nob3J0IiwidG9kYXkiLCJjbGVhciIsImRhdGVGb3JtYXQiLCJ0aW1lRm9ybWF0IiwiZmlyc3REYXkiLCJtYXhEYXRlIiwiRGF0ZSIsIm1pbkRhdGUiLCJkb2N1bWVudCIsInJlYWR5IiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQSxTQUFTQSxjQUFULEdBQTBCO0FBQ3RCLE1BQUlDLENBQUMsQ0FBQyxNQUFELENBQUQsQ0FBVUMsSUFBVixDQUFlLE1BQWYsS0FBd0IsSUFBNUIsRUFBa0M7QUFFOUJELEtBQUMsQ0FBQ0UsRUFBRixDQUFLQyxVQUFMLENBQWdCQyxRQUFoQixDQUF5QixJQUF6QixJQUFrQztBQUM5QkMsVUFBSSxFQUFFLENBQUUsUUFBRixFQUFZLFFBQVosRUFBc0IsU0FBdEIsRUFBaUMsV0FBakMsRUFBOEMsVUFBOUMsRUFBMEQsUUFBMUQsRUFBb0UsVUFBcEUsQ0FEd0I7QUFFOUJDLGVBQVMsRUFBRSxDQUFFLEtBQUYsRUFBUyxLQUFULEVBQWdCLE1BQWhCLEVBQXdCLEtBQXhCLEVBQStCLE9BQS9CLEVBQXdDLEtBQXhDLEVBQStDLEtBQS9DLENBRm1CO0FBRzlCQyxhQUFPLEVBQUUsQ0FBRSxJQUFGLEVBQVEsSUFBUixFQUFjLElBQWQsRUFBb0IsSUFBcEIsRUFBMEIsSUFBMUIsRUFBZ0MsSUFBaEMsRUFBc0MsSUFBdEMsQ0FIcUI7QUFJOUJDLFlBQU0sRUFBRSxDQUFFLFNBQUYsRUFBYSxVQUFiLEVBQXlCLE9BQXpCLEVBQWtDLE9BQWxDLEVBQTJDLEtBQTNDLEVBQWtELE1BQWxELEVBQTBELE1BQTFELEVB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SUFoQixLQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQkcsVUFBMUIsQ0FBcUM7QUFDakNjLGFBQU8sRUFBRSxJQUFJRCxJQUFKO0FBRHdCLEtBQXJDO0FBR0g7QUFDSjs7QUFFRGhCLENBQUMsQ0FBQ2tCLFFBQUQsQ0FBRCxDQUFZQyxLQUFaLENBQWtCLFlBQVc7QUFDekIsTUFBSW5CLENBQUMsQ0FBQyx1QkFBRCxDQUFELENBQTJCb0IsTUFBM0IsSUFBcUNwQixDQUFDLENBQUMsc0JBQUQsQ0FBRCxDQUEwQm9CLE1BQW5FLEVBQTJFO0FBQ3ZFckIsa0JBQWM7QUFDakI7QUFDSixDQUpEIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2Fpci1kYXRlcGlja2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRhdGVwaWNrZXIgZnJvbSBcImFpci1kYXRlcGlja2VyL2Rpc3QvanMvZGF0ZXBpY2tlci5taW4uanNcIjtcblxuZnVuY3Rpb24gaW5pdERhdGVQaWNrZXIoKSB7XG4gICAgaWYgKCQoJ2h0bWwnKS5hdHRyKCdsYW5nJyk9PSdlbicpIHtcblxuICAgICAgICAkLmZuLmRhdGVwaWNrZXIubGFuZ3VhZ2VbJ2VuJ10gPSAge1xuICAgICAgICAgICAgZGF5czogWyAnU3VuZGF5JywgJ01vbmRheScsICdUdWVzZGF5JywgJ1dlZG5lc2RheScsICdUaHVyc2RheScsICdGcmlkYXknICwnU2F0dXJkYXknXSxcbiAgICAgICAgICAgIGRheXNTaG9ydDogWyAnU3VuJywgJ01vbicsICdUdWVzJywgJ1dlZCcsICdUaHVycycsICdGcmknLCAnU2F0J10sXG4gICAgICAgICAgICBkYXlzTWluOiBbICdTdScsICdNbycsICdUdScsICdXZScsICdUaCcsICdGcicsICdTYSddLFxuICAgICAgICAgICAgbW9udGhzOiBbICdKYW51YXJ5JywgJ0ZlYnJ1YXJ5JywgJ01hcmNoJywgJ0FwcmlsJywgJ01heScsICdKdW5lJywgJ0p1bHknLCAnQXVndXN0JywgJ1NlcHRlbWJlcicsICdPY3RvYmVyJywgJ05vdmVtYmVyJywgJ0RlY2VtYmVyJyBdLFxuICAgICAgICAgICAgbW9udGhzU2hvcnQ6IFsgJ0phbi4nLCAnRmViLicsICdNYXIuJywgJ0Fwci4nLCAnTWF5JywgJ0p1bi4nLCAnSnVsLicsICdBdWcuJywgJ1NlcC4nLCAnT2N0LicsICdOb3YuJywgJ0RlYy4nIF0sXG4gICAgICAgICAgICB0b2RheTogJ1RvZGF5JyxcbiAgICAgICAgICAgIGNsZWFyOiAnQ2xlYXInLFxuICAgICAgICAgICAgZGF0ZUZvcm1hdDogJ2RkLm1tLnl5eXknLFxuICAgICAgICAgICAgdGltZUZvcm1hdDogJ2hoOmlpJyxcbiAgICAgICAgICAgIGZpcnN0RGF5OiA3XG4gICAgICAgIH07XG5cbiAgICAgICAgJCgnLmRhdGVwaWNrZXItYmVmb3JlLWpzJykuZGF0ZXBpY2tlcih7XG4gICAgICAgICAgICBsYW5ndWFnZTogJ2VuJyxcbiAgICAgICAgICAgIG1heERhdGU6IG5ldyBEYXRlKClcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJCgnLmRhdGVwaWNrZXItYWZ0ZXItanMnKS5kYXRlcGlja2VyKHtcbiAgICAgICAgICAgIGxhbmd1YWdlOiAnZW4nLFxuICAgICAgICAgICAgbWluRGF0ZTogbmV3IERhdGUoKVxuICAgICAgICB9KTtcblxuICAgIH0gZWxzZSBpZiAoJCgnaHRtbCcpLmF0dHIoJ2xhbmcnKT09J3VrJyl7XG4gICAgICAgICQuZm4uZGF0ZXBpY2tlci5sYW5ndWFnZVsndWsnXSA9ICB7XG4gICAgICAgICAgICBkYXlzOiBbICfQndC10LTRltC70Y8nLCAn0L/QvtC90LXQtNGW0LvQvtC6JywgJ9Cy0ZbQstGC0L7RgNC+0LonLCAn0YHQtdGA0LXQtNCwJywgJ9GH0LXRgtCy0LXRgCcsICfQv1xcJ9GP0YLQvdC40YbRjicgLCcg0YHRg9Cx0L7RgtGDICddLFxuICAgICAgICAgICAgZGF5c1Nob3J0OiBbICfQktC+0YEnLCAn0J/QvtC9JywgJ9CS0ZbQsicsICfQodGA0LUnLCAn0KfQtdGCJywgJ9CfXFwn0Y/RgicsICfQodGD0LEnXSxcbiAgICAgICAgICAgIGRheXNNaW46IFsgJ9Cd0LQnLCAn0J/QvScsICfQktGCJywgJ9Ch0YAnLCAn0KfRgicsICfQn9GCJywgJ9Ch0LEnXSxcbiAgICAgICAgICAgIG1vbnRoczogWyAn0KHRltGH0LXQvdGMJywgJ9Cb0Y7RgtC40LknLCAn0JHQtdGA0LXQt9C10L3RjCcsICfQmtCy0ZbRgtC10L3RjCcsICfQotGA0LDQstC10L3RjCcsICfQp9C10YDQstC10L3RjCcsICfQm9C40L/QtdC90YwnLCAn0KHQtdGA0L/QtdC90YwnLCAn0JLQtdGA0LXRgdC10L3RjCcsICfQltC+0LLRgtC10L3RjCcsICfQm9C40YHRgtC+0L/QsNC0JywgJ9CT0YDRg9C00LXQvdGMJyBdLFxuICAgICAgICAgICAgbW9udGhzU2hvcnQ6IFsgJ9GB0ZbRh9C10L3RjCcsICfQu9GO0YLQuNC5JywgJ9Cx0LXRgNC10LfQvdGMJywgJ9C60LLRltGC0LXQvdGMJywgJ9GC0YDQsNCy0LXQvdGMJywgJ9GH0LXRgNCy0LXQvdGMJywgJ9C70LjQv9C10L3RjCcsICfRgdC10YDQv9C10L3RjCcsICfQstC10YDQtdGB0LXQvdGMJywgJ9C20L7QstGC0LXQvdGMJywgJ9C70LjRgdGC0L7Qv9Cw0LQnLCAn0LPRgNGD0LTQtdC90YwnIF0sXG4gICAgICAgICAgICB0b2RheTogJ9Ch0LXQs9C+0LTQvdGPJyxcbiAgICAgICAgICAgIGNsZWFyOiAn0J7Rh9C40YHRgtC40YLRjCcsXG4gICAgICAgICAgICBkYXRlRm9ybWF0OiAnZGQubW0ueXl5eScsXG4gICAgICAgICAgICB0aW1lRm9ybWF0OiAnaGg6aWknLFxuICAgICAgICAgICAgZmlyc3REYXk6IDFcbiAgICAgICAgfTtcblxuICAgICAgICAkKCcuZGF0ZXBpY2tlci1iZWZvcmUtanMnKS5kYXRlcGlja2VyKHtcbiAgICAgICAgICAgIGxhbmd1YWdlOiAndWsnLFxuICAgICAgICAgICAgbWF4RGF0ZTogbmV3IERhdGUoKVxuICAgICAgICB9KTtcblxuICAgICAgICAkKCcuZGF0ZXBpY2tlci1hZnRlci1qcycpLmRhdGVwaWNrZXIoe1xuICAgICAgICAgICAgbGFuZ3VhZ2U6ICd1aycsXG4gICAgICAgICAgICBtaW5EYXRlOiBuZXcgRGF0ZSgpXG4gICAgICAgIH0pO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgICAgJCgnLmRhdGVwaWNrZXItYmVmb3JlLWpzJykuZGF0ZXBpY2tlcih7XG4gICAgICAgICAgICBtYXhEYXRlOiBuZXcgRGF0ZSgpXG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoJy5kYXRlcGlja2VyLWFmdGVyLWpzJykuZGF0ZXBpY2tlcih7XG4gICAgICAgICAgICBtaW5EYXRlOiBuZXcgRGF0ZSgpXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgaWYgKCQoJy5kYXRlcGlja2VyLWJlZm9yZS1qcycpLmxlbmd0aCB8fCAkKCcuZGF0ZXBpY2tlci1hZnRlci1qcycpLmxlbmd0aCkge1xuICAgICAgICBpbml0RGF0ZVBpY2tlcigpO1xuICAgIH1cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/air-datepicker.js\n");

/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var objectFitPolyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! objectFitPolyfill */ \"./node_modules/objectFitPolyfill/dist/objectFitPolyfill.min.js\");\n/* harmony import */ var objectFitPolyfill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(objectFitPolyfill__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var slick_carousel_slick_slick_min_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! slick-carousel/slick/slick.min.js */ \"./node_modules/slick-carousel/slick/slick.min.js\");\n/* harmony import */ var slick_carousel_slick_slick_min_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(slick_carousel_slick_slick_min_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var inputmask__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! inputmask */ \"./node_modules/inputmask/index.js\");\n/* harmony import */ var inputmask__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(inputmask__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var simplebar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! simplebar */ \"./node_modules/simplebar/dist/simplebar.esm.js\");\n/* harmony import */ var lazysizes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lazysizes */ \"./node_modules/lazysizes/lazysizes.js\");\n/* harmony import */ var lazysizes__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lazysizes__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var magnific_popup_dist_jquery_magnific_popup_min_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! magnific-popup/dist/jquery.magnific-popup.min.js */ \"./node_modules/magnific-popup/dist/jquery.magnific-popup.min.js\");\n/* harmony import */ var magnific_popup_dist_jquery_magnific_popup_min_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(magnific_popup_dist_jquery_magnific_popup_min_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var selectric__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! selectric */ \"./node_modules/selectric/public/jquery.selectric.js\");\n/* harmony import */ var selectric__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(selectric__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var jquery_match_height__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jquery-match-height */ \"./node_modules/jquery-match-height/dist/jquery.matchHeight.js\");\n/* harmony import */ var jquery_match_height__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery_match_height__WEBPACK_IMPORTED_MODULE_8__);\n// jQuery\n// require('jquery/dist/jquery.min');\n// window.$ = window.jQuery = require('jquery');\n\nwindow.$ = window.jQuery = jquery__WEBPACK_IMPORTED_MODULE_0___default.a; // form Stickyfill\n// import Stickyfill from \"stickyfilljs/dist/stickyfill.min.js\";\n\nwindow.Stickyfill = __webpack_require__(/*! stickyfilljs */ \"./node_modules/stickyfilljs/dist/stickyfill.js\"); // object-fit-images\n\n // slick\n\n // input mask\n\n // eventstouch\n// var loadTouchEvents = require('jquery-touch-events');\n// loadTouchEvents($);\n// malihu_scrollbar\n// import mCustomScrollbar from \"malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.concat.min.js\";\n// simplebar\n\n // lazysizes\n\n // magnific_popup\n\n // selectric\n\n // matchHeight\n\n // jquery-touchswipe\n\n__webpack_require__(/*! jquery-touchswipe/jquery.touchSwipe.min.js */ \"./node_modules/jquery-touchswipe/jquery.touchSwipe.min.js\"); // import validate from \"jquery-validation\";\n\n\n__webpack_require__(/*! jquery-validation */ \"./node_modules/jquery-validation/dist/jquery.validate.js\"); // sliders\n\n\n__webpack_require__(/*! ./sliders */ \"./resources/js/sliders.js\"); // popup\n\n\n__webpack_require__(/*! ./popup */ \"./resources/js/popup.js\"); // form\n\n\n__webpack_require__(/*! ./form */ \"./resources/js/form.js\"); // air-datepicker\n\n\n__webpack_require__(/*! ./air-datepicker */ \"./resources/js/air-datepicker.js\"); // main\n\n\n__webpack_require__(/*! ./main */ \"./resources/js/main.js\"); // перенес в cabinet\n// require(\"bootstrap\");\n// require('x-editable/dist/bootstrap3-editable/js/bootstrap-editable');\n// require('bootstrap-switch');\n// require('pgenerator');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwLmpzPzZkNDAiXSwibmFtZXMiOlsid2luZG93IiwiJCIsImpRdWVyeSIsIlN0aWNreWZpbGwiLCJyZXF1aXJlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBQSxNQUFNLENBQUNDLENBQVAsR0FBV0QsTUFBTSxDQUFDRSxNQUFQLEdBQWdCRCw2Q0FBM0IsQyxDQUNBO0FBQ0E7O0FBQ0FELE1BQU0sQ0FBQ0csVUFBUCxHQUFvQkMsbUJBQU8sQ0FBQyxvRUFBRCxDQUEzQixDLENBQ0E7O0NBRUE7O0NBRUE7O0NBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztDQUVBOztDQUVBOztDQUVBOztDQUVBOztDQUVBOztBQUNBQSxtQkFBTyxDQUFDLDZHQUFELENBQVAsQyxDQUNBOzs7QUFDQUEsbUJBQU8sQ0FBQyxtRkFBRCxDQUFQLEMsQ0FHQTs7O0FBQ0FBLG1CQUFPLENBQUMsNENBQUQsQ0FBUCxDLENBQ0E7OztBQUNBQSxtQkFBTyxDQUFDLHdDQUFELENBQVAsQyxDQUNBOzs7QUFDQUEsbUJBQU8sQ0FBQyxzQ0FBRCxDQUFQLEMsQ0FDQTs7O0FBQ0FBLG1CQUFPLENBQUMsMERBQUQsQ0FBUCxDLENBRUE7OztBQUNBQSxtQkFBTyxDQUFDLHNDQUFELENBQVAsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8galF1ZXJ5XG4vLyByZXF1aXJlKCdqcXVlcnkvZGlzdC9qcXVlcnkubWluJyk7XG4vLyB3aW5kb3cuJCA9IHdpbmRvdy5qUXVlcnkgPSByZXF1aXJlKCdqcXVlcnknKTtcbmltcG9ydCAkIGZyb20gJ2pxdWVyeSc7XG53aW5kb3cuJCA9IHdpbmRvdy5qUXVlcnkgPSAkO1xuLy8gZm9ybSBTdGlja3lmaWxsXG4vLyBpbXBvcnQgU3RpY2t5ZmlsbCBmcm9tIFwic3RpY2t5ZmlsbGpzL2Rpc3Qvc3RpY2t5ZmlsbC5taW4uanNcIjtcbndpbmRvdy5TdGlja3lmaWxsID0gcmVxdWlyZSgnc3RpY2t5ZmlsbGpzJyk7XG4vLyBvYmplY3QtZml0LWltYWdlc1xuaW1wb3J0IG9iamVjdEZpdFBvbHlmaWxsIGZyb20gJ29iamVjdEZpdFBvbHlmaWxsJztcbi8vIHNsaWNrXG5pbXBvcnQgc2xpY2sgZnJvbSBcInNsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLm1pbi5qc1wiO1xuLy8gaW5wdXQgbWFza1xuaW1wb3J0IElucHV0bWFzayBmcm9tIFwiaW5wdXRtYXNrXCI7XG4vLyBldmVudHN0b3VjaFxuLy8gdmFyIGxvYWRUb3VjaEV2ZW50cyA9IHJlcXVpcmUoJ2pxdWVyeS10b3VjaC1ldmVudHMnKTtcbi8vIGxvYWRUb3VjaEV2ZW50cygkKTtcbi8vIG1hbGlodV9zY3JvbGxiYXJcbi8vIGltcG9ydCBtQ3VzdG9tU2Nyb2xsYmFyIGZyb20gXCJtYWxpaHUtY3VzdG9tLXNjcm9sbGJhci1wbHVnaW4vanF1ZXJ5Lm1DdXN0b21TY3JvbGxiYXIuY29uY2F0Lm1pbi5qc1wiO1xuLy8gc2ltcGxlYmFyXG5pbXBvcnQgJ3NpbXBsZWJhcic7XG4vLyBsYXp5c2l6ZXNcbmltcG9ydCAnbGF6eXNpemVzJztcbi8vIG1hZ25pZmljX3BvcHVwXG5pbXBvcnQgbWFnbmlmaWNQb3B1cCBmcm9tIFwibWFnbmlmaWMtcG9wdXAvZGlzdC9qcXVlcnkubWFnbmlmaWMtcG9wdXAubWluLmpzXCI7XG4vLyBzZWxlY3RyaWNcbmltcG9ydCBzZWxlY3RyaWMgZnJvbSBcInNlbGVjdHJpY1wiO1xuLy8gbWF0Y2hIZWlnaHRcbmltcG9ydCAnanF1ZXJ5LW1hdGNoLWhlaWdodCc7XG4vLyBqcXVlcnktdG91Y2hzd2lwZVxucmVxdWlyZSgnanF1ZXJ5LXRvdWNoc3dpcGUvanF1ZXJ5LnRvdWNoU3dpcGUubWluLmpzJyk7XG4vLyBpbXBvcnQgdmFsaWRhdGUgZnJvbSBcImpxdWVyeS12YWxpZGF0aW9uXCI7XG5yZXF1aXJlKFwianF1ZXJ5LXZhbGlkYXRpb25cIik7XG5cblxuLy8gc2xpZGVyc1xucmVxdWlyZSgnLi9zbGlkZXJzJyk7XG4vLyBwb3B1cFxucmVxdWlyZSgnLi9wb3B1cCcpO1xuLy8gZm9ybVxucmVxdWlyZSgnLi9mb3JtJyk7XG4vLyBhaXItZGF0ZXBpY2tlclxucmVxdWlyZSgnLi9haXItZGF0ZXBpY2tlcicpO1xuXG4vLyBtYWluXG5yZXF1aXJlKCcuL21haW4nKTtcblxuLy8g0L/QtdGA0LXQvdC10YEg0LIgY2FiaW5ldFxuLy8gcmVxdWlyZShcImJvb3RzdHJhcFwiKTtcbi8vIHJlcXVpcmUoJ3gtZWRpdGFibGUvZGlzdC9ib290c3RyYXAzLWVkaXRhYmxlL2pzL2Jvb3RzdHJhcC1lZGl0YWJsZScpO1xuLy8gcmVxdWlyZSgnYm9vdHN0cmFwLXN3aXRjaCcpO1xuLy8gcmVxdWlyZSgncGdlbmVyYXRvcicpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/js/form.js":
/*!******************************!*\
  !*** ./resources/js/form.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(document).ready(function () {\n  // Inputmask\n  Inputmask({\n    mask: '+38 (999) 999-99-99',\n    clearMaskOnLostFocus: true,\n    clearIncomplete: true,\n    showMaskOnHover: false\n  }).mask('input[type=tel]'); // validate form review start\n\n  $('.input-file').change(function (e) {\n    $('.error-file-info').hide();\n    $('.max-size').hide();\n    var maxFileSize = 5 * 1024 * 1024;\n    var fileInputSize = e.target.files[0].size;\n    var fileInput = $(this).closest('.input-file-inner-wrap').find('.input-file');\n    var labelText = $(this).closest('.input-file-inner-wrap').find('.label-text');\n    var labelRemove = $(this).closest('.input-file-inner-wrap').find('.label-remove');\n    var parent = $(this).closest('.input-file-inner-wrap');\n\n    if ($(this).val() != '') {\n      if (fileInputSize > maxFileSize) {\n        $('.error-file-info').show();\n        $('.max-size').show();\n        fileInput.val('');\n      } else {\n        var fileName = e.target.files[0].name;\n        labelText.text(fileName);\n        labelRemove.show();\n        parent.next('.input-file-inner-wrap').css('display', 'flex');\n      }\n    } else {\n      if ($('html').attr('lang') == 'ru') {\n        labelText.text('Загрузить фото');\n        labelRemove.hide();\n      } else if ($('html').attr('lang') == 'uk') {\n        labelText.text('Завантажити фото');\n        labelRemove.hide();\n      } else {\n        labelText.text('Upload a photo');\n        labelRemove.hide();\n      }\n    }\n  });\n  $('.label-remove').click(function (e) {\n    var labelText = $(this).closest('.input-file-inner-wrap').find('.label-text');\n    var labelRemove = $(this).closest('.input-file-inner-wrap').find('.label-remove');\n    var input = $(this).closest('.input-file-inner-wrap').find('.input-file');\n\n    if ($(this).hasClass('label-remove-cv')) {\n      if ($('html').attr('lang') == 'ru') {\n        labelText.text('Загрузить файл');\n      } else if ($('html').attr('lang') == 'uk') {\n        labelText.text('Завантажити файл');\n      } else {\n        labelText.text('upload_file');\n      }\n    } else {\n      if ($('html').attr('lang') == 'ru') {\n        labelText.text('Загрузить фото');\n      } else if ($('html').attr('lang') == 'uk') {\n        labelText.text('Завантажити фото');\n      } else {\n        labelText.text('Upload a photo');\n      }\n    }\n\n    labelRemove.hide();\n    input.val('');\n\n    if (!$(this).parent().next('.input-file-inner-wrap').find('.input-file').val()) {\n      $(this).parent().next('.input-file-inner-wrap').css('display', 'none');\n    }\n  });\n  var item = $('.review_form');\n\n  function sendTextFields(item, formdata) {\n    var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n    var dataForm;\n\n    if (file != '') {\n      dataForm = {\n        data: formdata,\n        file: file,\n        _token: csrf_token,\n        subj: 'review'\n      };\n    } else {\n      dataForm = {\n        data: formdata,\n        _token: csrf_token,\n        subj: 'review'\n      };\n    }\n\n    ;\n    $.ajax({\n      url: routes.postSend,\n      type: 'POST',\n      data: dataForm,\n      success: function success(data) {\n        $(item)[0].reset();\n\n        if ($('html').attr('lang') == 'ru') {\n          $('.label-text').text('Загрузить фото');\n        } else if ($('html').attr('lang') == 'uk') {\n          $('.label-text').text('Завантажити фото');\n        } else {\n          $('.label-text').text('Upload a photo');\n        }\n\n        $('.input-file-inner-wrap').not(':eq(0)').css('display', 'none');\n        $('.label-remove').hide();\n        $('.form-thanks').show();\n\n        function showForm() {\n          $('.form-thanks').hide();\n        }\n\n        setTimeout(showForm, 5000);\n      }\n    });\n  }\n\n  ;\n\n  function formReviewValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n\n        if (document.getElementById('input-file-1').files.length || document.getElementById('input-file-2').files.length) {\n          var inputs;\n\n          (function () {\n            inputs = $('.input-file');\n            var $data = {};\n\n            var _loop = function _loop(i) {\n              var element = inputs[i];\n              var next_el = inputs[i + 1] ? inputs[i + 1] : null;\n\n              if (element != null && element.files.length) {\n                var reader = new FileReader();\n\n                reader.onload = function () {\n                  var key = 'file_' + i;\n                  var value = reader.result;\n                  $data[key] = value;\n\n                  if (next_el == null || !next_el.files.length) {\n                    setTimeout(function () {\n                      $.ajax({\n                        type: 'POST',\n                        url: routes.postLoadFile,\n                        data: {\n                          \"_token\": csrf_token,\n                          \"data\": $data\n                        },\n                        success: function success(response) {\n                          var uploadedFile = response.file_name;\n                          sendTextFields(item, formdata, uploadedFile);\n                        },\n                        error: function error(response) {}\n                      });\n                    }, 100);\n                  }\n                };\n\n                reader.readAsDataURL(inputs[i].files[0]);\n              }\n            };\n\n            for (var i = 0; i < inputs.length; i++) {\n              _loop(i);\n            }\n          })();\n        } else {\n          sendTextFields(item, formdata);\n        }\n      }\n    });\n  }\n\n  $(\".do_review_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.review_form');\n    formReviewValidate(formVal);\n    formVal.submit();\n  }); // validate form review end\n  // validate form callback\n\n  $(\".do_callback_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.callback_form');\n    formCallbackValidate(formVal);\n    formVal.submit();\n  });\n\n  function formCallbackValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"callback\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  } // validate form feedback\n\n\n  $(\".do_feedback_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.feedback_form');\n    formFeedbackValidate(formVal);\n    formVal.submit();\n  });\n\n  function formFeedbackValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"feedback\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  } // new-post-form start\n\n\n  function formValidateNewPost(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"subscription\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ;\n  $(\".do-new-post-form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.new-post-form');\n    formValidateNewPost(formVal);\n    formVal.submit();\n  }); // new-post-form end\n  // Registration for a service\n\n  $(\".do_appointment_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.appointment_form');\n    formAppointmentValidate(formVal);\n    formVal.submit();\n  });\n\n  function formAppointmentValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"appointment\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ; // Registration for a service\n\n  $(\".do_registration_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.registration_form');\n    formRegistrationValidate(formVal);\n    formVal.submit();\n  });\n\n  function formRegistrationValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"appointment\"\n          },\n          success: function success(data) {\n            $('#appointment').find('.popup-sub-name').text();\n            $('#appointment').find('input[name=appointment]').val('');\n            $('#appointment').find('input[name=specialist]').val('');\n            $('.select-appointment-specialist').prop('selectedIndex', 0).selectric('refresh');\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ; // Registration for specialist\n\n  $(\".do_specialist_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.specialist_form');\n    formRegistrationSpecialistValidate(formVal);\n    formVal.submit();\n  });\n\n  function formRegistrationSpecialistValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"specialist\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ; // validate question_service_form\n\n  $(\".do_question_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.question_form');\n    formQuestionServiceValidate(formVal);\n    formVal.submit();\n  });\n\n  function formQuestionServiceValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"question\"\n          },\n          success: function success(data) {\n            $('#question').find('.popup-sub-name').text();\n            $('#question').find('input[name=appointment]').val('');\n            $('.select-question').prop('selectedIndex', 0).selectric('refresh');\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  $(\".do_chekup_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.chekup_form');\n    formChekupValidate(formVal);\n    formVal.submit();\n  });\n\n  function formChekupValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"chekup\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ;\n  $(\".do_consultation_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.consultation_form');\n    formConsultationValidate(formVal);\n    formVal.submit();\n  });\n\n  function formConsultationValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"consultation\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ;\n  $('.online-consultation-form').validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $('.online-consultation-form').serialize();\n      $('.online-consultation-form')[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"onlinereview\"\n        },\n        success: function success(data) {\n          $('.online-consultation-form').hide();\n          $('.online-consultation-form').next('.form-thanks').show();\n\n          function showForm() {\n            $('.online-consultation-form').next('.form-thanks').hide();\n            $('.online-consultation-form').show();\n          }\n\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  });\n  $(\".do-online-consultation\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.online-consultation-form');\n    formValidateNewPost(formVal);\n    formVal.submit();\n  }); // cabinet\n\n  $(\".registration-form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(\".registration-form\").serialize();\n      $.ajax({\n        url: routes.postRegister,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata\n        },\n        success: function success(data) {\n          switch (data) {\n            case \"email\":\n              $(\".registration-form .auth-error\").slideDown(200);\n              break;\n\n            case \"deleted\":\n              $(\".registration-form .auth-del\").slideDown(200);\n              break;\n\n            case \"success\":\n              window.location.href = window.location.origin + \"/cabinet/\";\n              break;\n          }\n        }\n      });\n    }\n  });\n  $('.do_registration-form').click(function (e) {\n    e.preventDefault();\n    $(\".registration-form\").submit();\n  });\n  $(\".reset-form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(\".reset-form\").serialize();\n      $.ajax({\n        url: routes.postPassword,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata\n        },\n        success: function success(data) {\n          switch (data) {\n            case \"no_email\":\n              $(\".reset-form .auth-error\").slideDown(200);\n              $(\".reset-form .auth-restored\").slideUp(200);\n              break;\n\n            case \"success\":\n              $(\".reset-form .auth-restored\").slideDown(200);\n              $(\".reset-form.auth-error\").slideUp(200);\n              break;\n          }\n        }\n      });\n    }\n  });\n  $(\".do_reset-form\").click(function (e) {\n    e.preventDefault();\n    $(\".reset-form\").submit();\n  });\n  $(\".login-form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(\".login-form\").serialize();\n      $.ajax({\n        url: routes.postLogin,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata\n        },\n        success: function success(data) {\n          switch (data) {\n            case \"wrong_pass\":\n              $(\".login-form .auth-error\").slideDown(200);\n              break;\n\n            case \"success\":\n              window.location.reload(true);\n              break;\n          }\n        }\n      });\n    }\n  });\n  $(\".do_login-form\").click(function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    $(\".login-form\").submit();\n  });\n  $(\".a-logout\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n    $.ajax({\n      url: routes.postLogout,\n      type: 'POST',\n      data: {\n        \"_token\": csrf_token\n      },\n      success: function success(data) {\n        switch (data) {\n          case \"success\":\n            var href = window.location.href;\n            var return_href = href.split('#')[0];\n            window.location.href = return_href;\n            break;\n        }\n      }\n    });\n  }); // appointment ultrasound\n\n  $(\".do_appointment_ultrasound\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.appointment_ultrasound');\n    formAppointmentUltrasound(formVal);\n    formVal.submit();\n  });\n\n  function formAppointmentUltrasound(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"ultrasound\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ; // Registration for Test\n\n  $(\".do_appointment_test\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.appointment_test');\n    formAppointmentTestValidate(formVal);\n    formVal.submit();\n  });\n\n  function formAppointmentTestValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"test\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ; // Registration for vaccination\n\n  $(\".do_vaccination_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    var formVal = $(this).closest('.vaccination_form');\n    formAppointmentVaccinationValidate(formVal);\n    formVal.submit();\n  });\n\n  function formAppointmentVaccinationValidate(form) {\n    form.validate({\n      submitHandler: function submitHandler(form) {\n        var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n        var formdata = $(form).serialize();\n        $(form)[0].reset();\n        $.ajax({\n          url: routes.postSend,\n          type: 'POST',\n          data: {\n            \"_token\": csrf_token,\n            \"data\": formdata,\n            \"subj\": \"vaccination\"\n          },\n          success: function success(data) {\n            $(form).hide();\n            $(form).next('.form-thanks').show();\n\n            function hidePopup() {\n              $.magnificPopup.close();\n            }\n\n            function showForm() {\n              $(form).next('.form-thanks').hide();\n              $(form).show();\n            }\n\n            setTimeout(hidePopup, 5000);\n            setTimeout(showForm, 5000);\n          }\n        });\n      }\n    });\n  }\n\n  ; // corporate_form\n\n  $(\".do_corporate_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".corporate_form\").submit();\n  });\n  $(\".corporate_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"corporate\"\n        },\n        success: function success(data) {\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  }); // order_package\n\n  $(\".do_order_package\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".order_package\").submit();\n  });\n  $(\".order_package\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"order_package\"\n        },\n        success: function success(data) {\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  }); // resume_form\n\n  var item_cv = $('.send_resume_form');\n\n  function sendCvFields(item_cv, formdata) {\n    var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n    var dataForm;\n\n    if (file != '') {\n      dataForm = {\n        data: formdata,\n        file: file,\n        _token: csrf_token,\n        subj: 'resume'\n      };\n    } else {\n      dataForm = {\n        data: formdata,\n        _token: csrf_token,\n        subj: 'resume'\n      };\n    }\n\n    ;\n    $.ajax({\n      url: routes.postSend,\n      type: 'POST',\n      data: dataForm,\n      success: function success(data) {\n        $(item_cv)[0].reset();\n\n        if ($('html').attr('lang') == 'ru') {\n          $('.send_resume_form').find('.label-text').text('Загрузить файл');\n        } else if ($('html').attr('lang') == 'uk') {\n          $('.send_resume_form').find('.label-text').text('Завантажити файл');\n        } else {\n          $('.send_resume_form').find('.label-text').text('upload_file');\n        }\n\n        $('.send_resume_form').find('.label-remove').hide();\n        $('.send_resume_form').closest('.item-contact-form-wrap').find('.form-thanks').show();\n\n        function showForm() {\n          $('.send_resume_form').closest('.item-contact-form-wrap').find('.form-thanks').hide();\n        }\n\n        setTimeout(showForm, 5000);\n      }\n    });\n  }\n\n  ;\n  $(\".send_resume_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n\n      if (document.getElementById('input-file-cv').files.length) {\n        var inputs;\n\n        (function () {\n          inputs = $('.input-file');\n          var $data = {};\n\n          var _loop2 = function _loop2(i) {\n            var element = inputs[i];\n            var next_el = inputs[i + 1] ? inputs[i + 1] : null;\n\n            if (element != null && element.files.length) {\n              var reader = new FileReader();\n\n              reader.onload = function () {\n                var key = 'file_' + i;\n                var value = reader.result;\n                $data[key] = value;\n\n                if (next_el == null || !next_el.files.length) {\n                  setTimeout(function () {\n                    $.ajax({\n                      type: 'POST',\n                      url: routes.postLoadFile,\n                      data: {\n                        \"_token\": csrf_token,\n                        \"data\": $data\n                      },\n                      success: function success(response) {\n                        var uploadedFile = response.file_name;\n                        sendCvFields(item_cv, formdata, uploadedFile);\n                      },\n                      error: function error(response) {}\n                    });\n                  }, 100);\n                }\n              };\n\n              reader.readAsDataURL(inputs[i].files[0]);\n            }\n          };\n\n          for (var i = 0; i < inputs.length; i++) {\n            _loop2(i);\n          }\n        })();\n      } else {\n        sendCvFields(item_cv, formdata);\n      }\n    }\n  });\n  $(\".do_send_resume_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".send_resume_form\").submit();\n  }); // training_form\n\n  $(\".do_training_form\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".training_form\").submit();\n  });\n  $(\".training_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"training\"\n        },\n        success: function success(data) {\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  }); // for landing\n  // question a service\n\n  $(\".do_question_services\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".question_services_form\").submit();\n  });\n  $(\".question_services_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"landing_question_services\"\n        },\n        success: function success(data) {\n          $('#question-services').find('input[name=services_id]').val('');\n          $('.select-question-services').prop('selectedIndex', 0).selectric('refresh');\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function hidePopup() {\n            $.magnificPopup.close();\n          }\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(hidePopup, 5000);\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  });\n  $(\".do_appointment_services\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".appointment_services_form\").submit();\n  });\n  $(\".appointment_services_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"landing_appointment_services\"\n        },\n        success: function success(data) {\n          $('#appointment-services').find('input[name=appointment_services_id]').val('');\n          $('.select-appointment-services').prop('selectedIndex', 0).selectric('refresh');\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function hidePopup() {\n            $.magnificPopup.close();\n          }\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(hidePopup, 5000);\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  });\n  $(\".do_personal_ranslator\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".personal_ranslator_form\").submit();\n  });\n  $(\".personal_ranslator_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"landing_personal_ranslator\"\n        },\n        success: function success(data) {\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function hidePopup() {\n            $.magnificPopup.close();\n          }\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(hidePopup, 5000);\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  });\n  $(\".do_landing_question\").click(function (e) {\n    e.stopPropagation();\n    e.preventDefault();\n    $(\".landing_question_form\").submit();\n  });\n  $(\".landing_question_form\").validate({\n    submitHandler: function submitHandler(form) {\n      var csrf_token = $('meta[name=\"csrf-token\"]').attr('content');\n      var formdata = $(form).serialize();\n      $(form)[0].reset();\n      $.ajax({\n        url: routes.postSend,\n        type: 'POST',\n        data: {\n          \"_token\": csrf_token,\n          \"data\": formdata,\n          \"subj\": \"landing_question\"\n        },\n        success: function success(data) {\n          $('#landing-question').find('.popup-sub-name').text();\n          $('#landing-question').find('input[name=landing_question_id]').val('');\n          $(form).hide();\n          $(form).next('.form-thanks').show();\n\n          function hidePopup() {\n            $.magnificPopup.close();\n          }\n\n          function showForm() {\n            $(form).next('.form-thanks').hide();\n            $(form).show();\n          }\n\n          setTimeout(hidePopup, 5000);\n          setTimeout(showForm, 5000);\n        }\n      });\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/form.js\n");

/***/ }),

/***/ "./resources/js/main.js":
/*!******************************!*\
  !*** ./resources/js/main.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function initScrollbar() {\n  $(\".scroll-js\").mCustomScrollbar({\n    axis: \"y\",\n    updateOnContentResize: true,\n    documentTouchScroll: true\n  });\n}\n\nfunction initPriceTabs() {\n  $(document).on('click', '.tab-link', function (e) {\n    var hTopTitle = $('.main-section-title').offset().top;\n    var selectTab = $(this).attr('data-tab');\n    var parent = $(this).closest('.tabs-container');\n\n    if (selectTab == 'all') {\n      parent.find('.tab-link').removeClass('active');\n      $(this).addClass('active');\n      $('.tab-content').fadeIn();\n\n      if ($(window).scrollTop() > hTopTitle) {\n        $('html, body').animate({\n          scrollTop: $('.main-section-title').offset().top - 40\n        }, 500);\n      }\n    } else {\n      parent.find('.tab-link').removeClass('active');\n      $(this).addClass('active');\n      parent.find('.tab-content').hide();\n      $('#' + selectTab).fadeIn();\n\n      if ($('#' + selectTab).length != 0 && $(window).scrollTop() > hTopTitle) {\n        $('html, body').animate({\n          scrollTop: $('.main-section-title').offset().top - 40\n        }, 500);\n      }\n    }\n  });\n  $(document).on('click', '.tab-mobile-link', function (e) {\n    var selectTab = $(this).attr('data-tab');\n    var parent = $(this).closest('.tabs-container');\n\n    if (selectTab == 'all') {\n      parent.find('.tab-mobile-link').removeClass('active');\n      $(this).addClass('active');\n      parent.find('.tab-content').fadeIn();\n      $(\".active-tab-mobile-text\").html($('.tab-mobile-link.active').text());\n      $('.active-tab-mobile').toggleClass(\"active\");\n      $(\".tabs\").slideToggle();\n    } else {\n      parent.find('.tab-mobile-link').removeClass('active');\n      $(this).addClass('active');\n      parent.find('.tab-content').hide();\n      $('#' + selectTab).fadeIn();\n      $(\".active-tab-mobile-text\").html($('.tab-mobile-link.active').text());\n      $('.active-tab-mobile').toggleClass(\"active\");\n      $(\".tabs\").slideToggle();\n    }\n  });\n}\n\nfunction initSearchTabs() {\n  var active_tab = $('.tabs li').first();\n  var tabs_container = $(this).closest('.tabs-container');\n  var selectTab = active_tab.attr('data-tab');\n  active_tab.addClass('active');\n  tabs_container.find('.tab-content').hide();\n  $('#' + selectTab).fadeIn();\n\n  if ($('#' + selectTab).find('.mobile-slider-js').is('.slick-slider') == true) {\n    $(\".mobile-slider-js\").slick('destroy');\n    $(\".mobile-slider-js\").slick('refresh');\n  }\n\n  $(document).on('click', '.tab-link', function (e) {\n    var selectTab = $(this).attr('data-tab');\n    var parent = $(this).closest('.tabs-container');\n    parent.find('.tab-link').removeClass('active');\n    $(this).addClass('active');\n    parent.find('.tab-content').hide();\n    $('#' + selectTab).fadeIn();\n  });\n  $(document).on('click', '.tab-mobile-link', function (e) {\n    var selectTab = $(this).attr('data-tab');\n    var parent = $(this).closest('.tabs-container');\n    parent.find('.tab-mobile-link').removeClass('active');\n    $(this).addClass('active');\n    parent.find('.tab-content').hide();\n    $('#' + selectTab).fadeIn();\n\n    if ($('#' + selectTab).find('.mobile-slider-js').is('.slick-slider') == true) {\n      $(\".mobile-slider-js\").slick('destroy');\n      $(\".mobile-slider-js\").slick('refresh');\n    }\n\n    $(\".active-tab-mobile-text\").html($('.tab-mobile-link.active').text());\n    $('.active-tab-mobile').toggleClass(\"active\");\n    $(\".tabs\").slideToggle();\n  });\n}\n\n$(document).ready(function () {\n  // landing-page\n  if ($('.landing-page').length) {\n    $('.header-scroll-js').on('click', function () {\n      var scroll_el = $(this).attr('data-scroll');\n\n      if ($('.header-menu').hasClass('open')) {\n        $('.menu__icon').toggleClass('open');\n        $('.header-menu').toggleClass('open');\n        $('body').toggleClass('overflow');\n        $('html').toggleClass('not-overflow');\n\n        if (scroll_el === 'home') {\n          $(\"html, body\").animate({\n            scrollTop: 0\n          }, 1000);\n        } else {\n          $('html, body').animate({\n            scrollTop: $(\".\" + scroll_el).offset().top\n          }, 1000);\n        }\n      } else {\n        var scroll_el = $(this).attr('data-scroll');\n\n        if (scroll_el === 'home') {\n          $(\"html, body\").animate({\n            scrollTop: 0\n          }, 1000);\n        } else {\n          $('html, body').animate({\n            scrollTop: $(\".\" + scroll_el).offset().top\n          }, 1000);\n        }\n      }\n    });\n  }\n\n  if ($('.hirurgiya-page').length) {\n    setTimeout(function () {\n      $.magnificPopup.open({\n        items: {\n          src: '#popup-info'\n        },\n        type: 'inline'\n      }, 0);\n    }, 2000);\n  } // swipe for magnific-popup\n\n\n  if ($('.popup-gallery').length) {\n    // листание галерее по свайпу\n    (function () {\n      $(\".popup-gallery a\").click(function (e) {\n        setTimeout(function () {\n          $(\".mfp-gallery\").swipe({\n            swipeLeft: function swipeLeft(event, direction, distance, duration, fingerCount) {\n              $(\".mfp-gallery .mfp-arrow-right\").magnificPopup(\"next\");\n            },\n            swipeRight: function swipeRight(event, direction, distance, duration, fingerCount) {\n              $(\".mfp-gallery .mfp-arrow-left\").magnificPopup(\"prev\");\n            }\n          });\n        }, 500);\n      });\n    }).call(this);\n  }\n\n  if ($('.specialists-experience').length) {\n    $('.specialists-experience').matchHeight({\n      byRow: false\n    });\n  } // scrollTop\n\n\n  $('.up_button').on('click', function () {\n    $(\"html, body\").animate({\n      scrollTop: 0\n    }, 1000);\n    return false;\n  });\n  $('.burger-menu').on('click', function () {\n    $('.menu__icon').toggleClass('open');\n    $('.header-menu').toggleClass('open');\n    $('body').toggleClass('overflow');\n    $('html').toggleClass('not-overflow');\n  });\n  $(document).on('click', '.header-menu.open', function () {\n    $('.menu__icon').removeClass('open');\n    $('.header-menu').removeClass('open');\n    $('body').removeClass('overflow');\n    $('html').removeClass('not-overflow');\n  });\n  $('.header-menu-wrap').on('click', function (e) {\n    e.stopPropagation();\n  }); ///admin img\n\n  var adminImg = document.querySelectorAll(\".description\");\n\n  if (adminImg) {\n    Array.prototype.forEach.call(adminImg, function (wrapper, i) {\n      var images = wrapper.querySelectorAll(\"img\");\n\n      if (images) {\n        Array.prototype.forEach.call(images, function (img, i) {\n          var _float = img.style[\"float\"];\n          if (_float == \"left\") img.classList.add(\"margin-left-none\");else if (_float == \"right\") img.classList.add(\"margin-right-none\");\n        });\n      }\n    });\n  }\n\n  ; // tabs\n\n  if ($('.price-page').length) {\n    initPriceTabs();\n  }\n\n  if ($('.search_page').length || $('.offers-tab').length) {\n    initSearchTabs();\n  }\n\n  $(\".active-tab-mobile\").click(function (e) {\n    $(this).toggleClass(\"active\");\n    $(\".tabs\").slideToggle();\n  }); // selectric init\n\n  if ($('.selectric').length) {\n    $('.selectric').selectric({\n      disableOnMobile: false,\n      nativeOnMobile: false\n    });\n  } // CustomScrollbar\n\n\n  if ($('.scroll-js').length) {\n    initScrollbar();\n  }\n\n  if ($('.scroll-bnt-js').length) {\n    $('.scroll-bnt-js').click(function () {\n      var scroll_el = $(this).attr('data-id');\n      $('html, body').animate({\n        scrollTop: $(\".\" + scroll_el).offset().top - 30\n      }, 500);\n    });\n  }\n\n  if ($('.popup-gallery').length) {\n    $('.popup-gallery').each(function () {\n      $(this).magnificPopup({\n        delegate: 'a',\n        type: 'image',\n        mainClass: 'mfp-img-mobile',\n        gallery: {\n          enabled: true,\n          navigateByImgClick: true,\n          preload: [0, 1]\n        },\n        callbacks: {\n          close: function close() {\n            // удаление swipe при закрытии галереи\n            $(\".mfp-gallery\").swipe('destroy');\n          }\n        }\n      });\n    });\n  } // position sticky\n\n\n  if ($('.sticky').length) {\n    var elements = $('.sticky');\n    Stickyfill.add(elements);\n  } //   open search modal\n\n\n  $('.header-search-btn').click(function () {\n    var btn = $(this);\n\n    if (btn.hasClass('active')) {\n      btn.removeClass('active');\n      $('.search-dropdown').slideUp(200);\n      $('.overlay').removeClass('active');\n      $('.overlay.active').unbind('click');\n    } else {\n      btn.addClass('active');\n      $('.search-dropdown').slideDown(200);\n      $('.overlay').addClass('active');\n    }\n\n    setTimeout(function () {\n      $(\".search-input\").focus();\n      $(\".overlay.active\").click(function (e) {\n        var target = $(e.target);\n\n        if (target.is(\".overlay.active\")) {\n          btn.removeClass('active');\n          $('.search-dropdown').slideUp(200);\n          $('.overlay').removeClass('active');\n          $('.overlay.active').unbind('click');\n        }\n      });\n    }, 300);\n    $(document).one('keydown', function (e) {\n      if (e.keyCode == 27) {\n        btn.removeClass('active');\n        $('.search-dropdown').slideUp(200);\n        $('.overlay').removeClass('active');\n        $('.overlay.active').unbind('click');\n      }\n    });\n  }); // polifil object-fit\n\n  if ($('.object-fit-js').length) {\n    var someImages = $('.object-fit-js');\n    objectFitPolyfill(someImages);\n  } // open all price\n\n\n  if ($('.all_price_js').length) {\n    $('.all_price_js').click(function (e) {\n      var price_list = $(this).prev();\n      price_list.find('.price-item:not(.visible)').slideToggle(function () {\n        price_list.find('li:not(.visible)').toggleClass('hide');\n      });\n      $(this).children('.visible-text').toggleClass('text-hide');\n      $(this).children('.hide-text').toggleClass('text-hide');\n    });\n  } // open all diploms\n\n\n  if ($('.all_diploms_js').length) {\n    $('.all_diploms_js').click(function (e) {\n      var diploms_list = $(this).prev();\n      diploms_list.find('.gallery-item:not(.visible)').slideToggle(function () {\n        diploms_list.find('a:not(.visible)').toggleClass('hide');\n      });\n      $(this).children('.visible-text').toggleClass('text-hide');\n      $(this).children('.hide-text').toggleClass('text-hide');\n    });\n  } //  faq accordeon\n\n\n  if ($('.faq-question').length) {\n    $('.faq-question').on('click', function (e) {\n      var submenu = $(this).closest('.faq-item').find('.faq-answer');\n      var icon = $(this).closest('.faq-item').find('.faq-icon');\n      $(this).toggleClass('active');\n\n      if ($(this).hasClass('active')) {\n        icon.addClass('active');\n        submenu.slideDown(200);\n      } else {\n        icon.removeClass('active');\n        submenu.slideUp(200);\n      }\n    });\n  } //  description spoiler\n\n\n  if ($('.spoiler').length) {\n    $('.spoiler').on('click', function (e) {\n      var submenu = $(this).find('.spoiler-content');\n      var icon = $(this).find('.spoiler-toggle');\n      $(this).toggleClass('active');\n\n      if ($(this).hasClass('active')) {\n        icon.addClass('active');\n        submenu.slideDown(200);\n      } else {\n        icon.removeClass('active');\n        submenu.slideUp(200);\n      }\n    });\n  }\n});\n$(window).on('load resize', function () {\n  if (window.innerWidth < 1025) {\n    // for header submenu services\n    if (!$('.has-submenu-services .header-menu-link').hasClass('header-menu-link-js')) {\n      $('.has-submenu-services .header-menu-link').addClass('header-menu-link-js');\n      $('.header-menu-link-js').on('click', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        var submenu = $(this).closest('.has-submenu-services').find('.header-submenu-services-wrap');\n\n        if (!$(this).hasClass('active')) {\n          $(this).addClass('active');\n          submenu.slideDown(200);\n        } else {\n          $(this).removeClass('active');\n          submenu.slideUp(200);\n        }\n      });\n    }\n\n    if (!$('.header-submenu-services-title').hasClass('submenu-services-js')) {\n      $('.header-submenu-services-title').addClass('submenu-services-js');\n      $('.submenu-services-js').on('click', function (e) {\n        var submenu = $(this).closest('.header-submenu-services-item').find('.header-submenu-services-list');\n        $(this).toggleClass('active');\n\n        if ($(this).hasClass('active')) {\n          submenu.slideDown(200);\n        } else {\n          submenu.slideUp(200);\n        }\n      });\n    } // remove position sticky with overflow hidden\n\n\n    if ($('.sticky-with-hiden').length) {\n      var elements = $('.sticky-with-hiden');\n      Stickyfill.remove(elements);\n    }\n\n    if ($('.unit-block-img').length) {\n      var unitImg = $('.unit-block-img-wrap .unit-block-img');\n      unitImg.insertAfter($(\".unit-block-title-js\"));\n    }\n\n    if ($('.scroll-js').length) {\n      if ($('.scroll-js').hasClass('mCustomScrollbar')) {\n        $('.scroll-js').mCustomScrollbar(\"destroy\");\n      }\n    }\n\n    if ($('.tabs').length) {\n      $('.tabs').each(function () {\n        var li = $(this).find('li').removeClass('tab-link').addClass('tab-mobile-link');\n\n        if (li.hasClass('active')) {} else {\n          var active_tab = $(this).find('.tab-mobile-link').first();\n          var tabs_container = $(this).closest('.tabs-container');\n          var selectTab = active_tab.attr('data-tab');\n          active_tab.addClass('active');\n        }\n      });\n      $(\".active-tab-mobile-text\").html($('.tab-mobile-link.active').text());\n    }\n  } else {\n    // for header submenu services\n    if ($('.has-submenu-services .header-menu-link').hasClass('header-menu-link-js')) {\n      $('.header-menu-link-js').unbind('click');\n      $('.has-submenu-services .header-menu-link').removeClass('header-menu-link-js active');\n      $('.header-submenu-services-wrap').css('display', '');\n    }\n\n    if ($('.header-submenu-services-title').hasClass('submenu-services-js')) {\n      $('.submenu-services-js').unbind('click');\n      $('.header-submenu-services-title').removeClass('submenu-services-js');\n      $('.header-submenu-services-list').css('display', '');\n    }\n\n    $('.header-submenu-services-title').unbind('click'); // position sticky with overflow hidden\n\n    if ($('.sticky-with-hiden').length) {\n      Stickyfill.forceSticky();\n      var elements = $('.sticky-with-hiden');\n      Stickyfill.add(elements);\n    }\n\n    if ($('.unit-block-img').length) {\n      var unitImg = $('.unit-block-info .unit-block-img');\n      unitImg.appendTo($(\".sticky\"));\n    } // destroy custom scroll filter block\n\n\n    if ($('.scroll-js').length) {\n      if ($('.scroll-js').hasClass('mCS_destroyed')) {\n        initScrollbar();\n      }\n    }\n\n    if ($('.tabs').length) {\n      $('.tabs').css('display', '');\n      $('.tabs').each(function () {\n        var li = $(this).find('li').removeClass('tab-mobile-link').addClass('tab-link');\n\n        if (li.hasClass('active')) {} else {\n          var active_tab = $(this).find('.tab-link').first();\n          var tabs_container = $(this).closest('.tabs-container');\n          var selectTab = active_tab.attr('data-tab');\n          active_tab.addClass('active');\n        }\n      });\n    }\n  }\n\n  if (window.innerWidth < 767) {\n    if ($('.main-section-title-wrap .btn-arrow').length) {\n      var moreLink = $('.main-section-title-wrap .btn-arrow');\n      $(moreLink).each(function () {\n        var location = $(this).closest('.main-section').find('.btn-wrap');\n        location.append($(this));\n      });\n    }\n  } else {\n    if ($('.btn-wrap .btn-arrow').length) {\n      var moreLink = $('.btn-wrap .btn-arrow');\n      $(moreLink).each(function () {\n        var location = $(this).closest('.main-section').find('.main-section-title-wrap');\n        location.append($(this));\n      });\n    }\n  }\n\n  if (window.innerWidth < 401) {\n    // отключение расчета выстоты\n    if ($('.special-action-info').length) {\n      $('.special-action-info').matchHeight({\n        remove: true\n      });\n    }\n  } else {\n    // Расчет выстоты\n    if ($('.special-action-info').length && !$('.special-action-info').attr('style')) {\n      $('.special-action-info').matchHeight();\n    }\n  }\n}); // scroll-btn\n\n$(window).on('load scroll', function () {\n  if ($(this).scrollTop() > 100) {\n    $('.up_button').addClass(\"visible\").fadeIn();\n  } else {\n    $('.up_button').removeClass(\"visible\").fadeOut();\n  }\n\n  ;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/main.js\n");

/***/ }),

/***/ "./resources/js/popup.js":
/*!*******************************!*\
  !*** ./resources/js/popup.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(document).ready(function () {\n  $(function () {\n    $('.popup-js').magnificPopup({\n      fixedContentPos: true\n    });\n  });\n  $('.popup-js').not('.appointment-online-btn').click(function () {\n    var popup = $(this).attr('href');\n    setTimeout(function () {\n      $(popup).find(\".input-form\")[0].focus();\n    }, 300);\n  });\n  $('.appointment-btn-js').click(function () {\n    var text = $(this).attr('data-subtitle');\n    $('#appointment').find('.popup-sub-name').text(text);\n    $('#appointment').find('input[name=appointment]').val(text);\n  });\n  $('.landing-question-js').click(function () {\n    var text = $(this).attr('data-subtitle');\n    $('#landing-question').find('.popup-sub-name').text(text);\n    $('#landing-question').find('input[name=landing_question_id]').val(text);\n  });\n  $(document).on('change', '.select-appointment-specialist', function (e) {\n    var selectAppointmentSpecialist = $(\".select-appointment-specialist option:selected\").text();\n    $('#appointment').find('input[name=specialist]').val(selectAppointmentSpecialist);\n  });\n  $(document).on('change', '.select-question-services', function (e) {\n    var selectLandingQuestionServices = $(\".select-question-services option:selected\").text();\n    $('#question-services').find('input[name=services_id]').val(selectLandingQuestionServices);\n  });\n  $(document).on('change', '.select-appointment-services', function (e) {\n    var selectLandingAppointmentServices = $(\".select-appointment-services option:selected\").text();\n    $('#appointment-services').find('input[name=appointment_services_id]').val(selectLandingAppointmentServices);\n  });\n  $('.specialist-btn-js').click(function () {\n    var text = $(this).attr('data-subtitle');\n    $('#specialist').find('.popup-sub-name').text(text);\n    $('#specialist').find('input[name=appointment]').val(text);\n  });\n  $('.question-btn-js').click(function () {\n    var text = $(this).attr('data-subtitle');\n    $('#question').find('.popup-sub-name').text(text);\n    $('#question').find('input[name=appointment]').val(text);\n  });\n  $(document).on('change', '.select-question', function (e) {\n    var selectQuestionText = $(\".select-question option:selected\").text();\n    $('#question').find('input[name=appointment]').val(selectQuestionText);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcG9wdXAuanM/ODUzMSJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsIm1hZ25pZmljUG9wdXAiLCJmaXhlZENvbnRlbnRQb3MiLCJub3QiLCJjbGljayIsInBvcHVwIiwiYXR0ciIsInNldFRpbWVvdXQiLCJmaW5kIiwiZm9jdXMiLCJ0ZXh0IiwidmFsIiwib24iLCJlIiwic2VsZWN0QXBwb2ludG1lbnRTcGVjaWFsaXN0Iiwic2VsZWN0TGFuZGluZ1F1ZXN0aW9uU2VydmljZXMiLCJzZWxlY3RMYW5kaW5nQXBwb2ludG1lbnRTZXJ2aWNlcyIsInNlbGVjdFF1ZXN0aW9uVGV4dCJdLCJtYXBwaW5ncyI6IkFBQUFBLENBQUMsQ0FBQ0MsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBVztBQUN6QkYsR0FBQyxDQUFDLFlBQVk7QUFDYkEsS0FBQyxDQUFDLFdBQUQsQ0FBRCxDQUFlRyxhQUFmLENBQTZCO0FBQzVCQyxxQkFBZSxFQUFFO0FBRFcsS0FBN0I7QUFHQSxHQUpBLENBQUQ7QUFNQUosR0FBQyxDQUFDLFdBQUQsQ0FBRCxDQUFlSyxHQUFmLENBQW1CLHlCQUFuQixFQUE4Q0MsS0FBOUMsQ0FBb0QsWUFBWTtBQUM1RCxRQUFJQyxLQUFLLEdBQUdQLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUVEsSUFBUixDQUFhLE1BQWIsQ0FBWjtBQUNBQyxjQUFVLENBQUMsWUFBVztBQUNsQlQsT0FBQyxDQUFDTyxLQUFELENBQUQsQ0FBU0csSUFBVCxDQUFjLGFBQWQsRUFBNkIsQ0FBN0IsRUFBZ0NDLEtBQWhDO0FBQ0gsS0FGUyxFQUVQLEdBRk8sQ0FBVjtBQUdILEdBTEQ7QUFTQVgsR0FBQyxDQUFDLHFCQUFELENBQUQsQ0FBeUJNLEtBQXpCLENBQStCLFlBQVk7QUFDdkMsUUFBSU0sSUFBSSxHQUFHWixDQUFDLENBQUMsSUFBRCxDQUFELENBQVFRLElBQVIsQ0FBYSxlQUFiLENBQVg7QUFDQVIs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QyxVQUFTQyxDQUFULEVBQVk7QUFDckQsUUFBSUksa0JBQWtCLEdBQUduQixDQUFDLENBQUMsa0NBQUQsQ0FBRCxDQUFzQ1ksSUFBdEMsRUFBekI7QUFDQVosS0FBQyxDQUFDLFdBQUQsQ0FBRCxDQUFlVSxJQUFmLENBQW9CLHlCQUFwQixFQUErQ0csR0FBL0MsQ0FBbURNLGtCQUFuRDtBQUNILEdBSEQ7QUFLSCxDQTVERCIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wb3B1cC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xuICAgICQoZnVuY3Rpb24gKCkge1xuICAgIFx0JCgnLnBvcHVwLWpzJykubWFnbmlmaWNQb3B1cCh7XG4gICAgXHRcdGZpeGVkQ29udGVudFBvczogdHJ1ZSxcbiAgICBcdH0pO1xuICAgIH0pO1xuXG4gICAgJCgnLnBvcHVwLWpzJykubm90KCcuYXBwb2ludG1lbnQtb25saW5lLWJ0bicpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBvcHVwID0gJCh0aGlzKS5hdHRyKCdocmVmJyk7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKHBvcHVwKS5maW5kKFwiLmlucHV0LWZvcm1cIilbMF0uZm9jdXMoKTtcbiAgICAgICAgfSwgMzAwKVxuICAgIH0pO1xuXG5cblxuICAgICQoJy5hcHBvaW50bWVudC1idG4tanMnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXN1YnRpdGxlJyk7XG4gICAgICAgICQoJyNhcHBvaW50bWVudCcpLmZpbmQoJy5wb3B1cC1zdWItbmFtZScpLnRleHQodGV4dCk7XG4gICAgICAgICQoJyNhcHBvaW50bWVudCcpLmZpbmQoJ2lucHV0W25hbWU9YXBwb2ludG1lbnRdJykudmFsKHRleHQpO1xuICAgIH0pO1xuXG4gICAgJCgnLmxhbmRpbmctcXVlc3Rpb24tanMnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXN1YnRpdGxlJyk7XG4gICAgICAgICQoJyNsYW5kaW5nLXF1ZXN0aW9uJykuZmluZCgnLnBvcHVwLXN1Yi1uYW1lJykudGV4dCh0ZXh0KTtcbiAgICAgICAgJCgnI2xhbmRpbmctcXVlc3Rpb24nKS5maW5kKCdpbnB1dFtuYW1lPWxhbmRpbmdfcXVlc3Rpb25faWRdJykudmFsKHRleHQpO1xuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuc2VsZWN0LWFwcG9pbnRtZW50LXNwZWNpYWxpc3QnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIHZhciBzZWxlY3RBcHBvaW50bWVudFNwZWNpYWxpc3QgPSAkKFwiLnNlbGVjdC1hcHBvaW50bWVudC1zcGVjaWFsaXN0IG9wdGlvbjpzZWxlY3RlZFwiKS50ZXh0KCk7XG4gICAgICAgICQoJyNhcHBvaW50bWVudCcpLmZpbmQoJ2lucHV0W25hbWU9c3BlY2lhbGlzdF0nKS52YWwoc2VsZWN0QXBwb2ludG1lbnRTcGVjaWFsaXN0KTtcbiAgICB9KTtcblxuICAgICQoZG9jdW1lbnQpLm9uKCdjaGFuZ2UnLCAnLnNlbGVjdC1xdWVzdGlvbi1zZXJ2aWNlcycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgdmFyIHNlbGVjdExhbmRpbmdRdWVzdGlvblNlcnZpY2VzID0gJChcIi5zZWxlY3QtcXVlc3Rpb24tc2VydmljZXMgb3B0aW9uOnNlbGVjdGVkXCIpLnRleHQoKTtcbiAgICAgICAgJCgnI3F1ZXN0aW9uLXNlcnZpY2VzJykuZmluZCgnaW5wdXRbbmFtZT1zZXJ2aWNlc19pZF0nKS52YWwoc2VsZWN0TGFuZGluZ1F1ZXN0aW9uU2VydmljZXMpO1xuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuc2VsZWN0LWFwcG9pbnRtZW50LXNlcnZpY2VzJywgZnVuY3Rpb24oZSkge1xuICAgICAgICB2YXIgc2VsZWN0TGFuZGluZ0FwcG9pbnRtZW50U2VydmljZXMgPSAkKFwiLnNlbGVjdC1hcHBvaW50bWVudC1zZXJ2aWNlcyBvcHRpb246c2VsZWN0ZWRcIikudGV4dCgpO1xuICAgICAgICAkKCcjYXBwb2ludG1lbnQtc2VydmljZXMnKS5maW5kKCdpbnB1dFtuYW1lPWFwcG9pbnRtZW50X3NlcnZpY2VzX2lkXScpLnZhbChzZWxlY3RMYW5kaW5nQXBwb2ludG1lbnRTZXJ2aWNlcyk7XG4gICAgfSk7XG5cbiAgICAkKCcuc3BlY2lhbGlzdC1idG4tanMnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXN1YnRpdGxlJyk7XG4gICAgICAgICQoJyNzcGVjaWFsaXN0JykuZmluZCgnLnBvcHVwLXN1Yi1uYW1lJykudGV4dCh0ZXh0KTtcbiAgICAgICAgJCgnI3NwZWNpYWxpc3QnKS5maW5kKCdpbnB1dFtuYW1lPWFwcG9pbnRtZW50XScpLnZhbCh0ZXh0KTtcbiAgICB9KTtcblxuICAgICQoJy5xdWVzdGlvbi1idG4tanMnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXN1YnRpdGxlJyk7XG4gICAgICAgICQoJyNxdWVzdGlvbicpLmZpbmQoJy5wb3B1cC1zdWItbmFtZScpLnRleHQodGV4dCk7XG4gICAgICAgICQoJyNxdWVzdGlvbicpLmZpbmQoJ2lucHV0W25hbWU9YXBwb2ludG1lbnRdJykudmFsKHRleHQpO1xuICAgIH0pO1xuXG4gICAgJChkb2N1bWVudCkub24oJ2NoYW5nZScsICcuc2VsZWN0LXF1ZXN0aW9uJywgZnVuY3Rpb24oZSkge1xuICAgICAgICB2YXIgc2VsZWN0UXVlc3Rpb25UZXh0ID0gJChcIi5zZWxlY3QtcXVlc3Rpb24gb3B0aW9uOnNlbGVjdGVkXCIpLnRleHQoKTtcbiAgICAgICAgJCgnI3F1ZXN0aW9uJykuZmluZCgnaW5wdXRbbmFtZT1hcHBvaW50bWVudF0nKS52YWwoc2VsZWN0UXVlc3Rpb25UZXh0KTtcbiAgICB9KTtcblxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/popup.js\n");

/***/ }),

/***/ "./resources/js/sliders.js":
/*!*********************************!*\
  !*** ./resources/js/sliders.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("$(document).ready(function () {\n  $(\".reviews-slider\").slick({\n    // dots: true,\n    arrows: false,\n    fade: true,\n    asNavFor: $(\".counter-slider\"),\n    responsive: [{\n      breakpoint: 1025,\n      settings: {\n        adaptiveHeight: true\n      }\n    }]\n  });\n  $(\".counter-slider\").slick({\n    arrows: false,\n    dots: true,\n    fade: true,\n    asNavFor: $(\".reviews-slider\")\n  });\n});\n$(window).on('load resize', function () {\n  if ($('.special-actions-wrap.slider').length) {\n    $('.special-actions-wrap.slider').each(function () {\n      if (window.innerWidth < 767) {\n        if (!$(this).hasClass('slick-slider')) {\n          $(this).slick({\n            arrows: false,\n            dots: true,\n            infinite: true,\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            responsive: [{\n              breakpoint: 401,\n              settings: {\n                slidesToShow: 1\n              }\n            }]\n          });\n        }\n      } else {\n        if ($(this).hasClass('slick-slider')) {\n          $(this).slick('destroy');\n        }\n      }\n    });\n  }\n\n  if ($('.mobile-slider-js').length) {\n    $('.mobile-slider-js').each(function () {\n      if (window.innerWidth < 401) {\n        if (!$(this).hasClass('slick-slider')) {\n          $(this).slick({\n            arrows: true,\n            infinite: true,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            prevArrow: '<div class=\"mobile-slider-arrow prev\"></div>',\n            nextArrow: '<div class=\"mobile-slider-arrow next\"></div>'\n          });\n        }\n      } else {\n        if ($(this).hasClass('slick-slider')) {\n          $(this).slick('destroy');\n        }\n      }\n    });\n  }\n\n  if ($('.mobile-diplom-slider-js').length) {\n    $('.mobile-diplom-slider-js').each(function () {\n      if (window.innerWidth < 1025) {\n        $('.gallery-item').each(function () {\n          if ($(this).hasClass('hide')) {\n            $(this).removeClass('hide');\n          }\n        });\n\n        if (!$(this).hasClass('slick-slider')) {\n          $(this).slick({\n            arrows: true,\n            infinite: true,\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            prevArrow: '<div class=\"mobile-slider-arrow prev\"></div>',\n            nextArrow: '<div class=\"mobile-slider-arrow next\"></div>',\n            responsive: [{\n              breakpoint: 769,\n              settings: {\n                slidesToShow: 2,\n                slidesToScroll: 2\n              }\n            }, {\n              breakpoint: 401,\n              settings: {\n                slidesToShow: 1,\n                slidesToScroll: 1\n              }\n            }]\n          });\n        }\n      } else {\n        $('.gallery-item').each(function () {\n          if (!$(this).hasClass('visible')) {\n            $(this).addClass('hide');\n          }\n        });\n\n        if ($(this).hasClass('slick-slider')) {\n          $(this).slick('destroy');\n        }\n      }\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/sliders.js\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz80NGJjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL3Nhc3MvYXBwLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ }),

/***/ "./resources/sass/landing_app.scss":
/*!*****************************************!*\
  !*** ./resources/sass/landing_app.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9sYW5kaW5nX2FwcC5zY3NzPzAxZGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9sYW5kaW5nX2FwcC5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sass/landing_app.scss\n");

/***/ }),

/***/ 0:
/*!***********************************************************************************************!*\
  !*** multi ./resources/js/app.js ./resources/sass/app.scss ./resources/sass/landing_app.scss ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /home/serg/www/rishon.loc/resources/js/app.js */"./resources/js/app.js");
__webpack_require__(/*! /home/serg/www/rishon.loc/resources/sass/app.scss */"./resources/sass/app.scss");
module.exports = __webpack_require__(/*! /home/serg/www/rishon.loc/resources/sass/landing_app.scss */"./resources/sass/landing_app.scss");


/***/ })

},[[0,"/js/manifest","/js/vendor"]]]);